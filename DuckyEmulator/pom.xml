<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2025 Arthroverse Laboratory
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~ Organization: Arthroverse Laboratory
  ~ Author: Vinh Dinh Mai
  ~ Contact: business@arthroverse.com
  ~
  ~
  ~ @author ducksabervn
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.arthroverse</groupId>
    <artifactId>DuckyEmulator</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <javafx.version>17.0.14</javafx.version>
        <!--We only need to specify the correct version of JavaFX that correspond to the installed JDK. We dont need to care about the version of JDK since Maven has handled that-->
        <javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
    </properties>

    <dependencies>
        <!--BEGIN OF JAVAFX 17.0.14 DEPENDENCIES-->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>17.0.14</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>17.0.14</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>17.0.14</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>17.0.14</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>17.0.14</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>17.0.14</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>17.0.14</version>
        </dependency>
        <!--END OF JAVAFX 17.0.14 DEPENDENCY-->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>8.3.0</version>
        </dependency>

        <dependency>
            <groupId>io.github.palexdev</groupId>
            <artifactId>materialfx</artifactId>
            <version>11.17.0</version>
        </dependency>

        <dependency>
            <groupId>io.github.palexdev</groupId>
            <artifactId>mfxcore</artifactId>
            <version>11.8.0</version>
        </dependency>

        <dependency>
            <groupId>io.github.palexdev</groupId>
            <artifactId>mfxresources</artifactId>
            <version>11.9.1</version>
        </dependency>

        <dependency>
            <groupId>io.github.palexdev</groupId>
            <artifactId>virtualizedfx</artifactId>
            <version>11.9.6</version>
        </dependency>

    </dependencies>
    <!--This is where we run the command using mvn javafx:run-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>${javafx.maven.plugin.version}</version>
                <configuration>
                    <mainClass>com.arthroverse.duckyemulator.Main.DuckyEmulatorMain</mainClass>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.fxml</include>
                    <include>**/*.css</include>
                    <include>**/*.ttf</include>
                </includes>
            </resource>
        </resources>
    </build>
    <!--This is where we run the command mvn javafx:run -P debug and press "Attach debugger" in the terminal to connect Maven with Intelij built-in debugger-->
    <!--The "debug" is the profile name and the -P is the specifier where we run the command with specified profile-->
    <!--The debugger will run with localhost address => we will use 0.0.0.0:8000 instead of *:8000 because Intelij debugger wont work with *:-->
    <profiles>
        <profile>
            <id>debug</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.openjfx</groupId>
                        <artifactId>javafx-maven-plugin</artifactId>
                        <version>${javafx.maven.plugin.version}</version>
                        <configuration>
                            <mainClass>com.arthroverse.duckyemulator.Main.DuckyEmulatorMain</mainClass>
                            <options>
                                <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=0.0.0.0:8000</option>
                            </options>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>